#!/usr/bin/env python

import os
from argparse import ArgumentParser
from collections import defaultdict
from urllib.parse import unquote_plus
from xml.sax import SAXParseException

import untangle

import puz

parser = ArgumentParser()
parser.add_argument("xml_file", help="An xml file to convert to puz")
args = parser.parse_args()

xml_file = args.xml_file

try:
    xp = untangle.parse(xml_file).crossword
except SAXParseException:
    print("File {} could not be read as an .xml file".format(xml_file))
    exit(1)
except AttributeError:
    print("File {} may not be in a uclick xml format".format(xml_file))
    exit(1)

p = puz.Puzzle()

p.title = xp.Title["v"]
p.author = xp.Author["v"]
p.width = int(xp.Width["v"])
p.height = int(xp.Height["v"])
p.fill = "-" * p.width * p.height
p.solution = xp.AllAnswer["v"].replace("-", ".")

#  Add each clue by its grid number (not clue number), across before down
parsed_clues = defaultdict(list)
for clue in list(xp.across.children + xp.down.children):
    parsed_clues[int(clue["n"])].append(unquote_plus(clue["c"]))

#  Dump the clues back by grid number, across before down
for grid_square in sorted(parsed_clues.keys()):
    p.clues.extend(parsed_clues[grid_square])

(puz_name, _) = os.path.splitext(xml_file)
puz_file = "{}.puz".format(puz_name)

p.save(puz_file)

print("{} -> {}".format(xml_file, puz_file))
